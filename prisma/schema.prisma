// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model UserAccount {
  id            String        @id @default(cuid())
  fullName      String
  email         String        @unique
  password      String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  sentUser      Transaction[] @relation("SentUser")
  receivedUser  Transaction[] @relation("ReceivedUser")
  wallets       Wallet[]
}

model Transaction {
  id                  String      @id @default(cuid())
  sentUser            UserAccount? @relation(name: "SentUser", fields: [sentById], references: [id])
  receivedUser        UserAccount? @relation(name: "ReceivedUser", fields: [receivedById], references: [id])
  status              Status      @relation(fields: [statusId], references: [id])
  receivedwallet      Wallet?     @relation(name: "ReceivedWallet", fields: [receivedWalletId], references: [id])
  sentwallet          Wallet?     @relation(name: "SentWallet", fields: [sentWalletId], references: [id])
  sentCurrency        Currency    @relation(name: "SentCurrency", fields: [sentCurrencyId], references: [id])
  receivedCurrency    Currency?   @relation(name: "ReceivedCurrency", fields: [receivedCurrencyId], references: [id])
  sentById            String?
  receivedById        String?
  statusId            Int
  receivedWalletId    String?
  sentWalletId        String?
  rate                Decimal?
  amount              Decimal
  sentCurrencyId      Int
  receivedCurrencyId  Int?
  created_at          DateTime    @default(now())
  updated_at          DateTime    @updatedAt
}

model Wallet {
  id              String        @id @default(cuid())
  user            UserAccount   @relation(fields: [userId], references: [id])
  currency        Currency      @relation(fields: [currencyId], references: [id])
  userId          String
  currencyId      Int
  amount          Decimal
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  receivedWallet  Transaction[] @relation("ReceivedWallet")
  sentWallet      Transaction[] @relation("SentWallet")
}

model Status {
  id          Int             @id @default(autoincrement())
  name        String
  transaction Transaction[]
  created_at  DateTime        @default(now())
  updated_at  DateTime        @updatedAt
}

model Currency {
  id               Int           @id @default(autoincrement())
  name             String
  sentCurrency     Transaction[] @relation("SentCurrency")
  receivedCurrency Transaction[] @relation("ReceivedCurrency")
  wallet           Wallet[]
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
}